import {
  Brand,
  Nav,
  Navbar,
  NavItem,
  NavLink,
} from "@/components/ui/NavComponents";
import { signOut } from "@/supabase/actions/supabase-actions";
import { redirect } from "next/navigation";
import { supabaseAppServerClient } from "@/supabase/server";
import { clsx } from "clsx";

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function HomeLayout({ children }) {
  const supabase = supabaseAppServerClient();
  const {
    data: { user },
  } = await supabase.auth.getUser();

  if (!user) redirect("/login");

  //TODO: Section to check user's admin auth...

  const brand = { text: "Librazen", href: "/home" };
  let links = [
    { text: "Admin", href: "/admin", alignment: "left" },
    { text: "Catalogue", href: "/catalogue", alignment: "center" },
    { text: "Profile", href: "/profile", alignment: "right" },
    { text: "Cart", href: "/cart", alignment: "right" },
    { text: "Logout", href: "/", alignment: "right" },
  ];

  //Change links here
  if (!false) {
    links.splice(0, 1); //hard-coded for now...
  }

  const leftLinks = links.filter((link) => link.alignment === "left");
  const centerLinks = links.filter((link) => link.alignment === "center");
  const rightLinks = links.filter((link) => link.alignment === "right");

  return (
    <html lang="en">
      <body>
        <div className="h-full items-center justify-center bg-[radial-gradient(ellipse_at_top,_var(--tw-gradient-stops))] from-cyan-300 to-sky-500">
          <Navbar>
            <Brand href={brand.href}>{brand.text}</Brand>
            <Nav alignment="left">
              {leftLinks.map((link) => (
                <NavItem key={link.href}>
                  <NavLink href={link.href}>{link.text}</NavLink>
                </NavItem>
              ))}
            </Nav>
            <Nav alignment="center">
              {centerLinks.map((link) => (
                <NavItem key={link.href}>
                  <NavLink href={link.href}>{link.text}</NavLink>
                </NavItem>
              ))}
            </Nav>
            <Nav alignment="right">
              {rightLinks.map((link) => (
                <NavItem
                  key={link.href}
                  action={link.text === "Logout" ? signOut : undefined}
                >
                  {link.text !== "Logout" ? (
                    <NavLink href={link.href}>{link.text}</NavLink>
                  ) : (
                    <button
                      className={clsx(
                        "font-semibold text-xl text-violet-200 relative",
                        'after:content-[""] after:absolute after:left-0 after:-bottom-1 after:h-1 after:w-full after:scale-x-0 after:bg-violet-700 hover:text-violet-500 after:transition-transform after:duration-300 after:ease-out',
                        "hover:after:scale-x-100 hover:cursor-pointer"
                      )}
                    >
                      {link.text}
                    </button>
                  )}
                </NavItem>
              ))}
            </Nav>
          </Navbar>
          {children}
        </div>
      </body>
    </html>
  );
}
